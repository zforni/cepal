<?php

/**
 * @file
 * Theme specific functionality.
 */

/**
 * Implements hook_preprocess_html().
 */
function atomic_preprocess_html(&$variables) {
  $logged_in = \Drupal::currentUser()->isAuthenticated();
  if ($logged_in) {
    $variables['#attached']['library'][] = 'atomic/administrator';
  }
}

/**
 * Preprocess function for page_title.
 */
function atomic_preprocess_page_title(&$variables) {
  $route = \Drupal::routeMatch();
  $node = $route->getParameter('node');

  if ($node) {
    if ($node->getType() == "article") {
      $variables['pretitle'] = t("Articles");
    }
    if ($node->getType() == "page" && isset($node->field_pretitle->value)) {
      $variables['pretitle'] = $node->field_pretitle->value;
    }
  }
}

/**
 * Implement hook_theme_suggestions_HOOK_alter.
 */
function atomic_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__node_type__' . $node->getType();
  }
}

/**
 * Implement hook_theme_suggestions_HOOK_alter.
 */
function atomic_theme_suggestions_user_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'user__' . $variables['elements']['#user']->uid->value;

  $roles = $variables['elements']['#user']->getRoles();
  foreach ($roles as $role) {
    $suggestions[] = 'user__role__' . $role;
  }
}

/**
 * Adding custom theme settings.
 */
function atomic_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $form['contact_info'] = [
    '#type' => 'details',
    '#title' => t('Contact Information'),
    '#open' => TRUE,
  ];

  $phone = theme_get_setting('phone');
  $form['contact_info']['phone'] = [
    '#type' => 'tel',
    '#title' => t('Phone'),
    '#description' => t('Enter the phone number using the format 1234-5678.'),
    '#placeholder' => '1234-5678',
    '#default_value' => $phone,
  ];
  $email = theme_get_setting('email');
  $form['contact_info']['email'] = [
    '#type' => 'email',
    '#title' => t('Email'),
    '#pattern' => '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$',
    '#default_value' => $email,
  ];
  $address = theme_get_setting('address');
  $form['contact_info']['address'] = array(
    '#type' => 'text_format',
    '#title' => 'Address',
    '#format' => !empty($address) ? $address['format'] : 'basic_html',
    '#default_value' => $address['value'] ? $address['value'] : '',
  );
}

/**
 * Implements hook_preprocess_page.
 */
function atomic_preprocess_page(&$variables) {
  if ($phone = theme_get_setting('phone')) {
    $variables['contact_info']['phone'] = $phone;
  }
  if ($email = theme_get_setting('email')) {
    $variables['contact_info']['email'] = $email;
  }
  if ($address = theme_get_setting('address')) {
    $variables['contact_info']['address'] = $address['value'];
  }
}
